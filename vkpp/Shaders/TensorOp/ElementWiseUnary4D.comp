#version 450

#extension GL_EXT_shader_explicit_arithmetic_types: require
#extension GL_GOOGLE_include_directive : require

#include "DataType.h"

layout(set = 0, binding = 0) uniform Uniforms
{
    uvec4 g_sizes;
    uvec4 g_inputStrides;
    uvec4 g_outputStrides;
};

layout(set = 0, binding = 1) readonly buffer InputTensor { DATA_TYPE g_inputTensor[]; };
layout(set = 0, binding = 2) buffer OutputTensor { DATA_TYPE g_outputTensor[]; };

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main()
{
    const uint SizeN = g_sizes[0];
    const uint SizeC = g_sizes[1];
    const uint SizeH = g_sizes[2];
    const uint SizeW = g_sizes[3];
    const uint c = gl_GlobalInvocationID.z;
    const uint h = gl_GlobalInvocationID.y;
    const uint w = gl_GlobalInvocationID.x;
    if ((w >= SizeW) || (h >= SizeH))
    {
        return;
    }
    for (uint n = 0; n < SizeN; ++n)
    {
        uint inputIndex = n * g_inputStrides[0] + c * g_inputStrides[1] +
                            h * g_inputStrides[2] + w * g_inputStrides[3];
        uint outputIndex = n * g_outputStrides[0] + c * g_outputStrides[1] +
                            h * g_outputStrides[2] + w * g_outputStrides[3];
        DATA_TYPE x = g_inputTensor[inputIndex];
        g_outputTensor[outputIndex] = OP_NAME(x);
    }
}
